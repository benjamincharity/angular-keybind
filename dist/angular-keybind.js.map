{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d00ce75ec5830f0a9cc0","webpack:///./src/index.js","webpack:///./src/keybind.directive.js","webpack:///./src/keybind.controller.js"],"names":["angular","module","directive","KeybindDirective","restrict","replace","scope","bindToController","bcKeys","bcMethod","bcKeys2","bcMethod2","bcKeys3","bcMethod3","link","linkFunction","controller","controllerAs","$scope","$element","$attrs","$ctrl","bind","event","checkAndFire","KeybindController","console","log","DELAY","key","which","keyCode","toString","length","_triggerMatchesInput","keys","correctKeypress","findIndex","item"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAAA;;AAEAA,SAAQC,OAAO,qBAAqB,IAC/BC,UAAU,aADf,2B;;;;;;ACFA;;AAEA,QAAO,eAAe,SAAS,cAAc;KACzC,OAAO;;AAEX,SAHgBC;;AAFhB;;AAEO,UAASA,mBACd;KACE;;KAEA,IAAMD,YAAY;SACdE,UAAU;SACVC,SAAS;SACTC,OAAO;SACPC,kBAAkB;aACdC,QAAQ;aACRC,UAAU;aACVC,SAAS;aACTC,WAAW;aACXC,SAAS;aACTC,WAAW;;SAEfC,MAAMC;SACNC;SACAC,cAAc;;;KAGlB,OAAOf;;;;;KAMP,SAASa,aAAaG,QAAQC,UAAUC,QAAQC,OAAO;;;SAGnDF,SAASG,KAAK,WAAW,UAACC,OAAU;aAChCF,MAAMG,aAAaD;;;;;;;;;ACjC/B;;AAEA,QAAO,eAAe,SAAS,cAAc;KACzC,OAAO;;;AAGX,KAAI,eAAe,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEhiB,UAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAEhH,KAVaE,oBAUW,QAVXA,oBAUuC,YAAY;KAR5D,6BAAc;SAAA;;SACVC,QAAQC,IAAI;;;;;;;;;;KAqBhB,aAAa,mBAAmB,CAAC;SAC7B,KAAK;SACL,OAAO,SAAS,aAZPJ,OAAO;aAChB,IAAMK,QAAQ;;aAEd,IAAMC,MAAM,CAAC,OAAON,MAAMO,UAAU,cAChCP,MAAMQ,UAAUR,MAAMO,OAAOE;;aAEjC,IAAI,KAAKxB,UAAU,KAAKA,OAAOyB,SAAS,GAAG;iBACvC,IAAI,KAAKC,qBAAqBL,KAAK,KAAKrB,SAAS;qBAC7C,KAAKC,WAAWc;;;;aAIxB,IAAI,KAAKb,WAAW,KAAKA,QAAQuB,SAAS,GAAG;iBACzC,IAAI,KAAKC,qBAAqBL,KAAK,KAAKnB,UAAU;qBAC9C,KAAKC,YAAYY;;;;aAIzB,IAAI,KAAKX,WAAW,KAAKA,QAAQqB,SAAS,GAAG;iBACzC,IAAI,KAAKC,qBAAqBL,KAAK,KAAKjB,UAAU;qBAC9C,KAAKC,YAAYU;;;;;;;;;;;;;QAwB1B;SACC,KAAK;SACL,OAAO,SAAS,qBAbCM,KAAKM,MAAM;;aAE5B,IAAMC,kBAAkBD,KAAKE,UAAU,UAACC,MAAS;iBAC7C,OAAOT,QAAQS;;;aAGnB,OAAOF,mBAAmB,IAAI,OAAO;;;;KAiBzC,OAAO","file":"angular-keybind.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-keybind\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-keybind\"] = factory();\n\telse\n\t\troot[\"angular-keybind\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d00ce75ec5830f0a9cc0\n **/","import { KeybindDirective } from './keybind.directive';\n\nangular.module('bc.AngularKeybind', [])\n    .directive('bcKeybind', KeybindDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { KeybindController } from './keybind.controller';\n\nexport function KeybindDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'A',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcKeys: '=',\n            bcMethod: '&',\n            bcKeys2: '=?',\n            bcMethod2: '&?',\n            bcKeys3: '=?',\n            bcMethod3: '&?',\n        },\n        link: linkFunction,\n        controller: KeybindController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, $ctrl) {\n\n        // Trigger the ctrl logic on every keydown event\n        $element.bind('keydown', (event) => {\n            $ctrl.checkAndFire(event);\n        });\n\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/keybind.directive.js\n **/","export class KeybindController {\n\n    constructor() {\n        console.log('test');\n    }\n\n\n\n\n    /**\n     * If the key matches a key code, fire the appropriate event\n     *\n     * @param {Object} event\n     */\n    checkAndFire(event) {\n        const DELAY = 500;\n\n        const key = (typeof event.which === 'undefined' ?\n            event.keyCode : event.which).toString();\n\n        if (this.bcKeys && this.bcKeys.length > 0) {\n            if (this._triggerMatchesInput(key, this.bcKeys)) {\n                this.bcMethod()(event);\n            }\n        }\n\n        if (this.bcKeys2 && this.bcKeys2.length > 0) {\n            if (this._triggerMatchesInput(key, this.bcKeys2)) {\n                this.bcMethod2()(event);\n            }\n        }\n\n        if (this.bcKeys3 && this.bcKeys3.length > 0) {\n            if (this._triggerMatchesInput(key, this.bcKeys3)) {\n                this.bcMethod3()(event);\n            }\n        }\n    }\n\n\n    /**\n     * Determine if a key is found in an array of keys\n     *\n     * @param {String} key\n     * @param {Array} keys\n     * @return {Bool} found\n     */\n    _triggerMatchesInput(key, keys) {\n        // Check to see if the key matches one in our array\n        const correctKeypress = keys.findIndex((item) => {\n            return key === item;\n        });\n\n        return correctKeypress >= 0 ? true : false;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/keybind.controller.js\n **/"],"sourceRoot":""}